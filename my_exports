# {{{ She Bang!

#!/bin/bash

# -------------------------------------------------------------------------- }}}
# {{{ Default Browers, File Manager, and 256 colors.

export BROWSER=firefox
export FILE=ranger
export TERM=xterm-256color

# -------------------------------------------------------------------------- }}}
# {{{ Darwin CLI and LS colors.

if osType "darwin"; then

  export CLICOLOR=1
  export LSCOLORS=GxFxBxDxCxegedabagacad
fi

# -------------------------------------------------------------------------- }}}
# {{{ amber location.

if dirExists ${HOME}/git/amber; then
   AMBERPATH=${HOME}/git/amber
elif dirExists ${HOME}/soup/amber; then
     AMBERPATH=${HOME}/soup/amber
else
  AMBERPATH=""
  echo "WARNING: amber is not installed."
fi
export AMBERPATH

if [[ -d ${AMBERPATH} ]]; then
  newfactoryitem() {
    ${AMBERPATH}/bin/newfactoryitem "$@"
  }
fi

# -------------------------------------------------------------------------- }}}
# {{{ autodoc location.

if  dirExists ${HOME}/git/autodoc; then
  AUTODOCPATH=${HOME}/git/autodoc
elif dirExists ${HOME}/soup/autodoc; then
   AUTODOCPATH=${HOME}/soup/autodoc
else
  echo "WARNING: autodoc is not installed."
  AUTODOCPATH=""
fi
export AUTODOCPATH

# -------------------------------------------------------------------------- }}}
# {{{ docbld location and function.  These must go together.

if dirExists ${HOME}/git/docbld; then
  DOCBLDPATH=${HOME}/git/docbld
elif dirExists ${HOME}/soup/docbld; then
    DOCBLDPATH=${HOME}/soup/docbld
else
  echo "WARNING: docbld is not installed."
  DOCBLDPATH=""
fi
export DOCBLDPATH

if [[ -d ${DOCBLDPATH} ]]; then
  docbld() {
    rake --rakefile ${DOCBLDPATH}/Rakefile $1
  }
fi

# -------------------------------------------------------------------------- }}}
# {{{ Default editor. 

export EDITOR=/usr/bin/vim

# -------------------------------------------------------------------------- }}}
# {{{ emend location and function.  These must go together.

if dirExists ${HOME}/git/emend; then
  EMENDPATH=${HOME}/git/emend
else
  EMENDPATH=""
fi
export EMENDPATH

if [[ -d ${EMENDPATH} ]]; then
  newcomponent() {
    ${EMENDPATH}/bin/newcomponent "$@"
  }
fi

# -------------------------------------------------------------------------- }}}
# {{{ FZF customizations  

# export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'

# -------------------------------------------------------------------------- }}} # {{{ GIT_HOME is needed for test automation framework.

if dirExists ${HOME}/git; then
  export GIT_HOME=${HOME}/git
else
  echo "WARNING: ${HOME}/git does not exists."
fi

# -------------------------------------------------------------------------- }}}
# {{{ HISTCONTROL 

export HISTCONTROL=ignoreboth:erasedups

# -------------------------------------------------------------------------- }}}
# {{{ JAVA locations.

if dirExists ${HOME}/build/lclasses/main; then
  CLASSPATH=build/classes/main:build/classes/test
  export CLASSPATH
fi

# -------------------------------------------------------------------------- }}}
# {{{ newdoc location and functions.  These must go together.

if dirExists ${HOME}/git/newdoc; then
  NEWDOCPATH=${HOME}/git/newdoc
elif dirExists ${HOME}/soup/newdoc; then
    NEWDOCPATH=${HOME}/soup/newdoc
else
  echo "WARNING: newdoc is not installed."
  NEWDOCPATH=""
fi
export NEWDOCPATH

if [[ -d ${NEWDOCPATH} ]]; then
  newdoc() {
    ${NEWDOCPATH}/newdoc "$@"
  }
fi

# -------------------------------------------------------------------------- }}}
# {{{ X11 display type. 

if osType "linux"; then
  export DISPLAY=:0
fi

# -------------------------------------------------------------------------- }}}
# {{{ Lock my Windows environment variables.  Don't ask, Don't tell!!!

if hostName "USLZ"; then
  export HOME=/c/Users/${USERNAME}
  export HOMEDRIVE=/c
  export HOMEPATH=/c/Users/${USERNAME}
  export GIT_HOME=/c/Users/${USERNAME}/git
  export HOMESHARE=/c
fi

# -------------------------------------------------------------------------- }}}
