#!/bin/bash
# {{{ AO credits and documentation.
#
# Inspired by:
#  Doug Bell - "Organized Development with tmux", Jun 18, 2019
#               Conference in the Cloud A Perl and Raku Conf
#
# https://www.youtube.com/watch?v=o7Dg1kmjhfQ&t=2428s
#
# Name: Alpha and Omega
#   ao
#
# Use:
#  ao kjv
#
# Argument:
#  $1 tmux session name
#
# Note:
#   1. A session is created or attached to.
#   2. A new session is added if ao is used from with a tmux session.
# -------------------------------------------------------------------------- }}}
# {{{ function to clone or pull a repository as needed.

getRepository() {
  dir=$(pwd)
  cd ${GITPATH}
  gr ${1}
  cd ${dir}
}

# -------------------------------------------------------------------------- }}}
# {{{ Validate request includes one session name.

if [[ $# -eq 1 ]]; then

# -------------------------------------------------------------------------- }}}
# {{{ Validate session name.

if ! tmux has-session    -t $1 2>/dev/null; then case $1 in

# -------------------------------------------------------------------------- }}}
# {{{ Create ao session

"ao")
  tmux new-session   -c ${GITPATH}/dotfiles/bin -n ao -s $1 -d
  tmux send-keys     -t $1:1 '$EDITOR ao' Enter
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create bash session

"bash")
  gitRepository dotfiles

  tmux new-session   -c ${GITPATH}/dotfiles  -n dotfiles   -s $1 -d
  tmux new-window    -c ${GITPATH}/dotfiles  -n bashrc     -t $1:2

  tmux send-keys     -t $1:2 \
    '$EDITOR \
      bashrc \
      bashrc-personal \
      bash_logout \
      my_aliases \
      my_completions \
      my_exports \
      my_functions \
      my_paths \
      my_prompt \
    ' Enter

  tmux select-window -t $1:1
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create havasu session

"havasu")
  gitRepository havasu
  tmux new-session   -c ${GITPATH}/havasu    -n havasu     -s $1 -d
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create KJV session

"kjv")
  getRepository kjv
  tmux new-session   -c ${GITPATH}/kjv       -n kjv        -s $1 -d
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create nvim session

"nvim")
  getRepository nvim
  tmux new-session  -c ${HOME}/.config/nvim -n nvim -s $1 -d
  tmux send-keys -t $1:1 \
    'nvim \
      lua/plugins/init.lua \
      lua/traap/keybindings/init.lua \
      lua/traap/settings/init.lua \
      init.lua \
    ' Enter
  tmux select-window -t $1:1
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create ssh session

"ssh")
  getRepository ssh
  getRepository tmux
  tmux new-session   -c ${GITPATH}/ssh       -n ssh        -s $1 -d
  tmux new-window    -c ${GITPATH}/tmux      -n tmux       -t $1:2

  tmux send-keys     -t $1:1 '$EDITOR -O config gitconfig' Enter
  tmux send-keys     -t $1:2 '$EDITOR tmux.conf' Enter
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create soup session

"soup")
  getRepository amber
  getRepository autodoc
  getRepository newdoc
  tmux new-session   -c ${GITPATH}/amber     -n amber      -s $1 -d
  tmux new-window    -c ${GITPATH}/autodoc   -n autodoc    -t $1:2
  tmux new-window    -c ${GITPATH}/newdoc    -n newdoc     -t $1:3
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create vim session

"vim")
  getRepository vim
  tmux new-session   -c ${GITPATH}/vim      -n vim        -s $1 -d

  tmux send-keys     -t $1:1 \
    'vim \
      plug.vim \
      bundle/im-bundle-keybindings/plugin/bundle-keybindings.vim \
      bundle/cim-bundle-settings/plugin/bundle-settings.vim \
      bundle/vim-bundle-terminal/plugin/bundle-terminal.vim \
      vimrc \
      bootstrap.vim \
    ' Enter

  tmux select-window -t $1:1
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Create wiki session

"wiki")
  getRepository wiki
  tmux new-session   -c ${GITPATH}/wiki -n Work       -s $1 -d
  tmux new-window    -c ${GITPATH}           -n 'GH Repos' -t $1:2

  tmux send-keys     -t $1:1 '$EDITOR index.md'   Enter
  tmux select-window -t $1:1
  ;;

# -------------------------------------------------------------------------- }}}
# {{{ Session name not supported error.

  *)
    echo "Session name $1 is not supported."
    exit
    ;;
  esac
fi

# -------------------------------------------------------------------------- }}}
# {{{ Display usage

else
  echo "Session name [ao|bash|havasu|kjv|nvim|ssh|soup|vim|work] is required" \
      && exit
fi

# -------------------------------------------------------------------------- }}}
# {{{ Attach to tmux session.

[[ ! -n $TMUX ]] && tmux attach -t $1
  exit 0

# -------------------------------------------------------------------------- }}}
