#!/bin/bash
# {{{ list directory names in current folder 

lsd() { ls -d */ | tr -d '/' ; }

# -------------------------------------------------------------------------- }}}
# {{{ Get repo project folder. 
#     $1 => [bb | git | vim | soup]

repo() {
  case $1 in
    bb)
      repoName=bb
      ;;
    git)
      repoName=git
      ;;
    vim)
      repoName=git/vim/bundle
      ;;
    soup)
      repoName=soup
      ;;
    *)
      repoName=git
  esac
  echo $repoName

}

# -------------------------------------------------------------------------- }}}
# {{{ Pull latest changes
#
# $1 => repoType
# $2 => pull

gitPull() {
  case $2 in
    pull)
      [[ -z $(git status --porcelain) ]] \  # Local tracked files must be clean. 
      && [[ -n $(gil fetch --dry-run) ]] \  # Remote must have changes.
      && gitSetUserAndEmail $1 $2 \         # Duh! set user name and email.
      && git pull \                         # Tank .. PULL 
      && echo
      ;;
  esac
}

# -------------------------------------------------------------------------- }}}
# {{{ Set git user and email
#
# $1 => repoType
# $2 => pull

gitSetUserAndEmail(){
  case $2 in 
    pull)
    case $1 in
      bb)   gce fk ;;
      soup) gce fk ;;
      *)    gce traap ;;
    esac
  esac
}

# -------------------------------------------------------------------------- }}}
# {{{ Scan git repositories.
#
# $1 => repoType
# $2 => pull

gits(){

  # command to check if we are inside a git repository.

  # Save current directory.
  dir=$(pwd)

  repoName=$(repo $1)
  cd ${HOME}/${repoName} > /dev/null;

  for i in $(lsd); do
    # move to subdirectory
    d=${HOME}/${repoName}/${i%%}
    cd $d > /dev/null

    # Do work if were are inside a git repository.
    if [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) ]]; then

      if [[ -z $(git status --porcelain 2>/dev/null \
         && git stash list 2>/dev/null)  ]]; then
        gitPull $1 $2
      else
        echo "*** $d ***" 
        gdr
        git status --porcelain
        echo ""
      fi
   fi

    # move up a directory
    cd - > /dev/null;
  done;

  # Restore current director.
  cd $dir
}
# -------------------------------------------------------------------------- }}}
# {{{ Kick start the show.

gits "$@"

# -------------------------------------------------------------------------- }}}
