#!/bin/bash
# {{{ Create and toggle a winclass.
#
# Shout out:
#   Jake@Linux
#   https://www.youtube.com/watch?v=Zmx9fia1PTA&t=443s
#
# -------------------------------------------------------------------------- }}}
# {{{ toggle winclass function.
#
# This function gets winclass and uses it when alacritty is started to run the
# ao (alpha omega) script with a parameter.  The first innovation runs alacrity.
# Thereafter the winclass in toggled: hidden or showed..
#
# Parameters:
# 1 - winclass to toggle.
# 2 - working directory

toggle_winclass() {
  verbose=true
  winclass=$(xdotool search --class "$1");

  [ $verbose == true ] && notify-send "$1" "$winclass"

  if [[ -z "$winclass" ]]; then
    [[ $verbose == true ]] && notify-send "$1" "Create $1"
    cd "$2" || exit
    alacritty --class "$1,$1" --command ao "$1"
  else
    if [[ ! -f /tmp/"$1" ]]; then
      [[ $verbose == true ]] && notify-send "$1" "Hide $1"
      touch /tmp/"$1" && xdo hide "$winclass"
    elif [[ -f /tmp/"$1" ]]; then
      [[ $verbose == true ]] && notify-send "$1" "Show $1"
      rm /tmp/"$1" && xdo show "$winclass"
    fi
  fi
}

# -------------------------------------------------------------------------- }}}
# {{{ Use valid input to toggle a winclass.

# YouTube: Update input choices.

if [[ $# -eq 1 ]]; then
  case "$1" in
    "Neovim") toggle_winclass "$1" "$GITHOME/nvim.traap" ;;
    "Scratchpad") toggle_winclass "$1" "$WIKIHOME" ;;
    "Upgrade") toggle_winclass "$1" "$HOME" ;;
    "Wiki") toggle_winclass "$1" "$WIKIHOME" ;;
    "YouTube") toggle_winclass "$1" "$GITHOME/youtube" ;;
    *)
      echo "Toggling option not supported"
      exit
      ;;
  esac
else
  echo "toggler [scratchpad|"$1"|YuoTube]"
fi

# -------------------------------------------------------------------------- }}}
