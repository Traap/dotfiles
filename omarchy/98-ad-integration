#!/usr/bin/env bash
# 98-ad-integration — Omarchy AD join (sudo-safe, idempotent, non-fatal)
# ---------------------------------------------------------------------------
# Purpose:
#   Join Omarchy Arch Linux to Microsoft Active Directory (ENT.CO.VENTURA.CA.US)
#   Uses AUR helpers when County network is reachable; falls back to Samba/SSSD otherwise.
# ---------------------------------------------------------------------------

set -euo pipefail

# ---------------------------------------------------------------------------
# Constants
# ---------------------------------------------------------------------------
AD_DOMAIN="ent.co.ventura.ca.us"
AD_REALM="ENT.CO.VENTURA.CA.US"
AD_DNS1="10.130.5.98"
AD_DNS2="10.130.5.100"
AD_USER="${AD_USER:-135272}"  # export AD_USER="username" to override
LOG_FILE="ad-integration.log"

# ---------------------------------------------------------------------------
# Flag check
# ---------------------------------------------------------------------------
if [[ ${adFlag:-false} != true ]]; then
  log_warn "Active Directory integration skipped (adFlag=false)."
  return 0 2>/dev/null || exit 0
else
  log_info "Installing Active Directory integration."
fi

# ---------------------------------------------------------------------------
# Network reachability
# ---------------------------------------------------------------------------
log_info "Checking network reachability for ${AD_DOMAIN}..."
if ping -c1 -W2 "$AD_DNS1" >/dev/null 2>&1; then
  AD_ONLINE=true
  log_info "County network detected. Full AD integration enabled."
else
  AD_ONLINE=false
  log_warn "County network not reachable. Offline mode: minimal configuration only."
fi

# ---------------------------------------------------------------------------
# Package installation
# ---------------------------------------------------------------------------
log_info "Installing core AD packages..."
sudo pacman -Syu --noconfirm --needed samba krb5 sssd openresolv || {
  log_fail "Failed to install base packages."
  return 1 2>/dev/null || exit 1
}

if $AD_ONLINE; then
  log_info "Installing AUR packages (realmd, adcli, oddjob, oddjob-mkhomedir)..."
  yay -S --noconfirm --needed realmd adcli oddjob oddjob-mkhomedir || \
    log_warn "AUR packages failed to install; will continue with Samba/SSSD only."
fi

# ---------------------------------------------------------------------------
# DNS configuration
# ---------------------------------------------------------------------------
log_info "Configuring DNS for AD domain..."
sudo resolvectl dns eth0 "$AD_DNS1" "$AD_DNS2" || true
sudo resolvectl domain eth0 "$AD_DOMAIN" co.ventura.ca.us || true

# ---------------------------------------------------------------------------
# Time synchronization
# ---------------------------------------------------------------------------
log_info "Ensuring system time is synchronized..."
sudo systemctl enable --now systemd-timesyncd
timedatectl show | grep -E 'NTPSynchronized|TimeUSec' | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# Kerberos configuration
# ---------------------------------------------------------------------------
log_info "Writing /etc/krb5.conf..."
sudo tee /etc/krb5.conf >/dev/null <<EOF
[libdefaults]
  default_realm = $AD_REALM
  dns_lookup_realm = true
  dns_lookup_kdc = true
  rdns = false
EOF

# ---------------------------------------------------------------------------
# Kerberos test (only online)
# ---------------------------------------------------------------------------
if $AD_ONLINE; then
  log_info "Testing Kerberos configuration..."
  if kinit "${AD_USER}@${AD_REALM}"; then
    log_info "Kerberos authentication succeeded."
    klist | tee -a "$LOG_FILE"
  else
    log_warn "Kerberos authentication failed; check credentials or DNS/time sync."
  fi
else
  log_warn "Skipping Kerberos test (offline mode)."
fi

# ---------------------------------------------------------------------------
# Samba configuration
# ---------------------------------------------------------------------------
log_info "Configuring Samba..."
sudo tee /etc/samba/smb.conf >/dev/null <<EOF
[global]
   workgroup = ENT
   security = ADS
   realm = $AD_REALM
   kerberos method = secrets and keytab
   winbind use default domain = yes
   winbind enum users = yes
   winbind enum groups = yes
   template shell = /bin/bash
EOF

# ---------------------------------------------------------------------------
# Join AD domain (only online)
# ---------------------------------------------------------------------------
if $AD_ONLINE; then
  if sudo net ads testjoin | grep -q "Join is OK"; then
    log_info "Already joined to ${AD_DOMAIN}."
  else
    log_info "Joining AD domain ${AD_DOMAIN}..."
    if sudo net ads join -U "$AD_USER"; then
      log_info "Successfully joined ${AD_DOMAIN}."
    else
      log_fail "AD join failed; check Kerberos, DNS, and credentials."
    fi
  fi
else
  log_warn "Skipping AD join (offline mode)."
fi

# ---------------------------------------------------------------------------
# SSSD configuration
# ---------------------------------------------------------------------------
log_info "Configuring SSSD..."
sudo tee /etc/sssd/sssd.conf >/dev/null <<EOF
[sssd]
services = nss, pam
config_file_version = 2
domains = $AD_DOMAIN

[domain/$AD_DOMAIN]
id_provider = ad
access_provider = ad
auth_provider = ad
chpass_provider = ad
ad_domain = $AD_DOMAIN
krb5_realm = $AD_REALM
cache_credentials = True
fallback_homedir = /home/%u
default_shell = /bin/bash
EOF

sudo chmod 600 /etc/sssd/sssd.conf
sudo systemctl enable --now sssd.service

# ---------------------------------------------------------------------------
# PAM home directory creation
# ---------------------------------------------------------------------------
log_info "Ensuring PAM home directory creation..."
if ! grep -q pam_mkhomedir.so /etc/pam.d/system-login; then
  echo "session required pam_mkhomedir.so skel=/etc/skel/ umask=0077" \
    | sudo tee -a /etc/pam.d/system-login >/dev/null
  log_info "pam_mkhomedir enabled."
fi

# ---------------------------------------------------------------------------
# Verification
# ---------------------------------------------------------------------------
if $AD_ONLINE; then
  log_info "Verifying domain membership..."
  sudo net ads testjoin | tee -a "$LOG_FILE"
  log_info "Testing AD user resolution..."
  getent passwd "${AD_USER}@${AD_DOMAIN}" | tee -a "$LOG_FILE" || \
    log_warn "User resolution failed; check SSSD and Samba."
  id "${AD_USER}@${AD_DOMAIN}" | tee -a "$LOG_FILE" || \
    log_warn "id lookup failed; SSSD may still be initializing."
else
  log_warn "Skipping AD verification (offline mode)."
fi

# ---------------------------------------------------------------------------
# Summary
# ---------------------------------------------------------------------------
log_info "✅ AD integration complete."
log_info "Logs captured in: $(realpath "$LOG_FILE")"
if $AD_ONLINE; then
  log_info "You can test login via: su - ${AD_USER}@${AD_DOMAIN}"
else
  log_info "Offline configuration ready. Run again on County/VPN network to complete join."
fi
