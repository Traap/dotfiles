#!/usr/bin/env bash
# test-ad — Omarchy Active Directory diagnostic capture (read-only)
# ---------------------------------------------------------------------------
# Purpose:
#   Capture and analyze the current state of AD integration.
#   Safe to run online or offline.
# ---------------------------------------------------------------------------

set -euo pipefail

# ---------------------------------------------------------------------------
# Environment
# ---------------------------------------------------------------------------

LOG_FILE=test-ad.log

AD_DOMAIN="ent.co.ventura.ca.us"
AD_REALM="ENT.CO.VENTURA.CA.US"
AD_USER="${AD_USER:-135272}"

# ---------------------------------------------------------------------------
# Logging helpers (use existing Omarchy functions if loaded)
# ---------------------------------------------------------------------------
if ! declare -F log_info >/dev/null; then
  log_info()  { echo "ℹ️  $*"; }
  log_warn()  { echo "⚠️  $*"; }
  log_fail()  { echo "❌ $*"; }
fi

# ---------------------------------------------------------------------------
# Header
# ---------------------------------------------------------------------------
log_info "Starting AD diagnostic capture → ${LOG_FILE}"
{
  echo "------------------------------------------------------------------"
  echo "Omarchy Active Directory Diagnostic"
  echo "Timestamp: $(date)"
  echo "Hostname : $(hostname -s)"
  echo "FQDN     : $(hostname -f 2>/dev/null || echo 'n/a')"
  echo "------------------------------------------------------------------"
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 1. Package verification
# ---------------------------------------------------------------------------
log_info "Checking installed packages..."
{
  echo
  echo "### Package versions ###"
  pacman -Q samba krb5 sssd openresolv 2>&1 || true
  pacman -Q realmd adcli oddjob oddjob-mkhomedir 2>&1 || true
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 2. Network and DNS
#
# ---------------------------------------------------------------------------
log_info "Capturing network configuration..."
{
  echo
  echo "### Network ###"
  ip addr show
  ip route show
  resolvectl status || cat /etc/resolv.conf
  echo
  echo "### DNS lookup tests ###"
  host -t A "$AD_DOMAIN" || true
  host -t SRV _kerberos._tcp."$AD_DOMAIN" || true
  host -t SRV _ldap._tcp."$AD_DOMAIN" || true
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 3. Time synchronization
# ---------------------------------------------------------------------------
log_info "Checking NTP/time synchronization..."
{
  echo
  echo "### Time ###"
  timedatectl status
  systemctl is-active systemd-timesyncd && systemctl status systemd-timesyncd --no-pager
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 4. Kerberos
# ---------------------------------------------------------------------------
log_info "Inspecting Kerberos configuration..."
{
  echo
  echo "### /etc/krb5.conf ###"
  cat /etc/krb5.conf 2>/dev/null || echo "Missing /etc/krb5.conf"
  echo
  echo "### Kerberos test ###"
  klist 2>&1 || true
  kinit -k 2>&1 || echo "Offline test — skipping KDC contact."
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 5. Samba
# ---------------------------------------------------------------------------
log_info "Inspecting Samba configuration..."
{
  echo
  echo "### /etc/samba/smb.conf ###"
  cat /etc/samba/smb.conf 2>/dev/null || echo "Missing /etc/samba/smb.conf"
  echo
  echo "### Samba validation ###"
  testparm -s 2>&1 || echo "testparm failed (may be fine offline)"
  echo
  echo "### Samba domain info ###"
  net ads info 2>&1 || echo "Expected to fail if offline"
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 6. SSSD
# ---------------------------------------------------------------------------
log_info "Inspecting SSSD configuration..."
{
  echo
  echo "### /etc/sssd/sssd.conf ###"
  sudo cat /etc/sssd/sssd.conf 2>/dev/null || echo "Missing /etc/sssd/sssd.conf"
  echo
  echo "### SSSD service status ###"
  systemctl is-enabled sssd.service || echo "Not enabled"
  systemctl status sssd.service --no-pager 2>&1 || true
  echo
  echo "### NSS configuration ###"
  grep -E 'passwd|group' /etc/nsswitch.conf || true
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 7. PAM and home directory setup
# ---------------------------------------------------------------------------
log_info "Inspecting PAM configuration..."
{
  echo
  echo "### PAM mkhomedir ###"
  grep pam_mkhomedir.so /etc/pam.d/system-login || echo "pam_mkhomedir not configured"
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# 8. System summary
# ---------------------------------------------------------------------------
log_info "Collecting system summary..."
{
  echo
  echo "### System summary ###"
  uname -a
  lsb_release -a 2>/dev/null || cat /etc/os-release
} | tee -a "$LOG_FILE"

# ---------------------------------------------------------------------------
# Footer
# ---------------------------------------------------------------------------
{
  echo
  echo "------------------------------------------------------------------"
  echo "Diagnostic capture complete."
  echo "Log file saved to: ${LOG_FILE}"
  echo "------------------------------------------------------------------"
} | tee -a "$LOG_FILE"

log_info "✅ AD diagnostic complete."
